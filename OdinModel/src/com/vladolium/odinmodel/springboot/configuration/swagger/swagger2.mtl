[comment]

	OdinModel is a framework for transforming a custom web application development into a model-driven rapid prototyping approach

    Copyright (C) 2019  Vladolium

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see https://www.gnu.org/licenses/.

[/comment]
[comment encoding = UTF-8 /]
[module swagger2('http://www.eclipse.org/uml2/5.0.0/UML')]

[template public swagger2(aClass : Class)
	{
		packagePathNameVar 	: String = aClass._package.name.toLowerCase();
		packageNameVar 		: String = aClass._package.name.replaceAll('/', '.').toLowerCase().concat('.config');
		packageApiNameVar 	: String = aClass._package.name.replaceAll('/', '.').toLowerCase().concat('.controller');
	}
]
[file ('src/main/java/' + packagePathNameVar + '/config/Swagger2Config.java', false, 'UTF-8')]

package [packageNameVar/];

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import springfox.documentation.builders.RequestHandlerSelectors;
import springfox.documentation.service.ApiInfo;
import springfox.documentation.service.Contact;
import springfox.documentation.spi.DocumentationType;
import springfox.documentation.spring.web.plugins.Docket;
import springfox.documentation.swagger2.annotations.EnableSwagger2;
import static springfox.documentation.builders.PathSelectors.regex;
import java.util.Collections;

@Configuration
@EnableSwagger2
public class Swagger2Config {
//[protected ('for swagger')]
	@Bean
    public Docket productApi() {
        return new Docket(DocumentationType.SWAGGER_2)
                .select()
                .apis(RequestHandlerSelectors.basePackage("[packageApiNameVar/]"))
                .paths(regex("/api.*"))
                .build()
                .apiInfo(apiInfo());
    }
	
	private ApiInfo apiInfo() {
        ApiInfo apiInfo = new ApiInfo(
        		"The name of REST API", 
        	    "Some custom description of API.", 
        	    "version", 
        	    "Terms of service URL", 
        	    new Contact("Person/Company name", "www.company.com", "email_address@company.com"), 
        	    "License of API", "API license URL", Collections.emptyList());
        return apiInfo;
    }
//[/protected]
}

[/file]
[/template]
