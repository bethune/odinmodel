[comment encoding = UTF-8 /]
[module controller('http://www.eclipse.org/uml2/5.0.0/UML')]

[comment]
	OdinModel is a framework for transforming a custom web application development into a model-driven rapid prototyping approach

    Copyright (C) 2019  Vladolium

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see https://www.gnu.org/licenses/.
[/comment]

[comment][import com::vladolium::odinmodel::springboot::controller::path::create /]
[import com::vladolium::odinmodel::springboot::controller::path::update /]
[import com::vladolium::odinmodel::springboot::controller::path::readOne /]
[import com::vladolium::odinmodel::springboot::controller::path::readAll /]
[import com::vladolium::odinmodel::springboot::controller::path::search /]
[import com::vladolium::odinmodel::springboot::controller::path::delete /]
[import com::vladolium::odinmodel::springboot::controller::wrapper::manyToOneWrapper /][/comment]

[template public controller(aClass : Class){
	isEntity 		: Boolean = aClass.isAbstract = false;
	packagePath 	: String = aClass._package.name.toLowerCase();
	type 			: String = aClass.name.toUpperFirst();
	parameter		: String = aClass.name.toLowerFirst();
	controllerPath 	: String = aClass._package.name.replaceAll('/', '.').toLowerCase();}]
[comment][if isEntity]
	[file ('src/main/java/' + packagePath + '/controller/' + type + 'Controller.java', false, 'UTF-8')]
package [controllerPath/].controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import org.springframework.data.domain.*;
import org.springframework.format.annotation.*;
import java.time.*;
import java.util.*;
import [controllerPath/].domain.*;
import [controllerPath/].domain.[type/];
import [controllerPath/].domain.[type/].*;
import [controllerPath/].service.[type/]Service;
import [controllerPath/].service.*;
import [controllerPath/].wrapper.*;

@CrossOrigin(origins = "http://localhost:8080")
@RestController
@RequestMapping("/api/[parameter/]")
public class [type/]Controller {

	private [type/]Service [parameter/]Service;

	@Autowired
	public void set[type/]Service([type/]Service [parameter/]Service) {
		this.[parameter/]Service = [parameter/]Service;
	}

	[aClass.create()/]
	[aClass.update()/]
	[aClass.readOne()/]
	[aClass.readAll()/]
	[aClass.search()/]
	[aClass.delete()/]
	[aClass.manyToOneWrapper()/]

//Code between start and end will not be removed during generation.
//[protected ('for this controller')]
//[/protected]
}
	[/file]
[/if][/comment]
[/template]
