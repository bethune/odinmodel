[comment encoding = UTF-8 /]
[module oneToMany('http://www.eclipse.org/uml2/5.0.0/UML')]

[comment]
	OdinModel is a framework for transforming a custom web application development into a model-driven rapid prototyping approach

    Copyright (C) 2019  Vladolium

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see https://www.gnu.org/licenses/.
[/comment]

[template public oneToMany(aClass : Class){
	entity 	: String = aClass.name.toUpperFirst();}]
[for (relationship : Property | aClass.getAssociations().memberEnd)]
	[if relationship.lower = 1 and relationship.upper = 1 and relationship.type.name.toUpperFirst() = entity and 
		relationship.namespace = association and relationship.opposite.lower = 0 and relationship.opposite.upper = -1]
@OneToMany
@JoinColumn(name="[relationship.type.name.toLowerFirst()/]_id")
private List<[relationship.opposite.type.name.toUpperFirst()/]> [relationship.opposite.type.name.toLowerFirst()/]List;

public List<[relationship.opposite.type.name.toUpperFirst()/]> get[relationship.opposite.type.name.toUpperFirst()/]List() {
	return [relationship.opposite.type.name.toLowerFirst()/]List;
}
public void set[relationship.opposite.type.name.toUpperFirst()/]List(List<[relationship.opposite.type.name.toUpperFirst()/]> [relationship.opposite.type.name.toLowerFirst()/]List) {
	this.[relationship.opposite.type.name.toLowerFirst()/]List = [relationship.opposite.type.name.toLowerFirst()/]List;
}
	[/if]
[/for]
[/template]