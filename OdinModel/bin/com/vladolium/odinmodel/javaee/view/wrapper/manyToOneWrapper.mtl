[comment encoding = UTF-8 /]
[module manyToOneWrapper('http://www.eclipse.org/uml2/5.0.0/UML')]

[comment]
	OdinModel is a framework for transforming a custom web application development into a model-driven rapid prototyping approach

    Copyright (C) 2019  Vladolium

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see https://www.gnu.org/licenses/.
[/comment]

[template public manyToOneWrapper(aClass : Class){
	packagePath 		: String = aClass._package.name.toLowerCase();
	wrapperRequestPath 	: String = aClass._package.name.replaceAll('/', '.').toLowerCase();
	type	 			: String = aClass.name.toUpperFirst();}]
[for (relationship : Property | aClass.getAssociations().memberEnd)]
	[if relationship.lower = 1 and relationship.upper = -1 and relationship.type.name.toUpperFirst() = type and 
		relationship.namespace = association and relationship.opposite.lower = 1 and relationship.opposite.upper = 1]
		[file ('src/main/java/' + packagePath + '/wrapper/' + relationship.opposite.type.name.toUpperFirst() + type + '.java', false, 'UTF-8')]
package [wrapperRequestPath/].wrapper;

import [wrapperRequestPath/].model.*;

public class [relationship.opposite.type.name.toUpperFirst()/][type/] {

    private [relationship.opposite.type.name.toUpperFirst()/] [relationship.opposite.type.name.toLowerFirst()/];

    private [type/] [relationship.type.name.toLowerFirst()/];

    public [relationship.opposite.type.name.toUpperFirst()/] get[relationship.opposite.type.name.toUpperFirst()/]() {
	return [relationship.opposite.type.name.toLowerFirst()/];
    }

    public void set[relationship.opposite.type.name.toUpperFirst()/]([relationship.opposite.type.name.toUpperFirst()/] [relationship.opposite.type.name.toLowerFirst()/]) {
	this.[relationship.opposite.type.name.toLowerFirst()/] = [relationship.opposite.type.name.toLowerFirst()/];
    }

    public [type/] get[type/]() {
	return [relationship.type.name.toLowerFirst()/];
    }

    public void set[type/]([type/] [relationship.type.name.toLowerFirst()/]) {
	this.[relationship.type.name.toLowerFirst()/] = [relationship.type.name.toLowerFirst()/];
    }

}
		[/file]
	[/if]
[/for]
[/template]