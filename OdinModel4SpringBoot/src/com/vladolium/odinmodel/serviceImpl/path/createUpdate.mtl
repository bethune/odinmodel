[comment encoding = UTF-8 /]
[module createUpdate('http://www.eclipse.org/uml2/5.0.0/UML')]

[template public createUpdate(aClass : Class){
	entity 		: String = aClass.name.toUpperFirst();
	property	: String = aClass.name.toLowerFirst();}]
// covers create & update
@Override
public [entity/] createUpdate([entity/] [property/]) {
	return [property/]Repository.save([property/]);
}

[for (p : Property | aClass.getAssociations().memberEnd)]
	[comment: IRIC for manyToOne /]
	[if p.lower = 1 and p.upper = -1 and p.opposite.type.name.toUpperFirst() = entity and 
		p.namespace = association and p.opposite.lower = 1 and p.opposite.upper = 1] 
private [p.type.name.toUpperFirst()/]Repository [p.type.name.toLowerFirst()/]Repository;

public [entity/] createOneIric([entity/][p.type.name.toUpperFirst()/] [property/][p.type.name.toUpperFirst()/]) {
	[entity/] current[entity/] = [property/]Repository.save([property/][p.type.name.toUpperFirst()/].get[entity/]());
	[p.type.name.toUpperFirst()/] current[p.type.name.toUpperFirst()/] = [property/][p.type.name.toUpperFirst()/].get[p.type.name.toUpperFirst()/]();
	current[p.type.name.toUpperFirst()/].set[entity/]([property/]Repository.getOne(current[entity/].getId()));
	[p.type.name.toLowerFirst()/]Repository.save(current[p.type.name.toUpperFirst()/]);
	return current[entity/];
}
	[/if]
[/for]
[/template]
