[comment encoding = UTF-8 /]
[module entity('http://www.eclipse.org/uml2/5.0.0/UML')]

[import com::vladolium::odinmodel::domain::entityJavaImports /]
[import com::vladolium::odinmodel::domain::entityFieldImports /]
[import com::vladolium::odinmodel::domain::entityRelationshipImports /]

[template public entity(aClass : Class)
	{
		packageName		: String = aClass._package.name.replaceAll('/', '.').toLowerCase().concat('.domain');
		packagePath 	: String = aClass._package.name.toLowerCase();
		entity	 		: String = aClass.name.toUpperFirst();
		abstract	 	: Collection(T) = aClass.general.name.toUpperFirst();
		isAbstract 		: Boolean = aClass.isAbstract;
		doesNotInherit 	: Boolean = aClass.general->isEmpty();
	}
]
	
[file ('src/main/java/' + packagePath + '/domain/' + entity + '.java', false, 'UTF-8')] [comment: Target file in Spring Boot app./]

	[if isAbstract = false and doesNotInherit] [comment: If entity class./]
package [packageName/];

[aClass.entityJavaImports()/]

@Entity
public class [entity/] {

	[aClass.entityFieldImports()/]
	[aClass.entityRelationshipImports()/]

	//Code between start and end will not be removed during generation.
	//[protected ('for this entity')]
	//[/protected]

}
	[/if]

	
	[if isAbstract] [comment: If abstract class./]
package [packageName/];

[aClass.entityJavaImports()/]

@MappedSuperclass
public abstract class [entity/] {

	[aClass.entityFieldImports()/]

	//Code between start and end will not be removed during generation.
	//[protected ('for this abstract class')]
	//[/protected]
}
	[/if]


	[if isAbstract = false and doesNotInherit = false] [comment: If entity extends (inherits) abstract class./]
package [packageName/];

[aClass.entityJavaImports()/]

@Entity
public class [entity/] extends [abstract/] {

	[aClass.entityFieldImports()/]
	[aClass.entityRelationshipImports()/]
		
	//Code between start and end will not be removed during generation.
	//[protected ('for this inheriting entity')]
	//[/protected]
}
	[/if]

[/file]

[/template]
