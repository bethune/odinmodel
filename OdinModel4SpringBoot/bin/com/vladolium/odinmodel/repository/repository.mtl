[comment encoding = UTF-8 /]
[module repository('http://www.eclipse.org/uml2/5.0.0/UML')]

[template public repository(aClass : Class)
	{
		isEntityVar 				: Boolean = aClass.isAbstract = false;
		packageFilePathNameVar 		: String = aClass._package.name.toLowerCase();
		entityClassNameVar 			: String = aClass.name.toUpperFirst();
		packageRepositoryPathVar 	: String = aClass._package.name.replaceAll('/', '.').toLowerCase();
		entityPropertyNameVar		: String = aClass.name.toLowerFirst();
	}
]

[if isEntityVar] [comment: generate the repository methods for entities/]
	[file ('src/main/java/' + packageFilePathNameVar + '/repository/' + entityClassNameVar + 'Repository.java', false, 'UTF-8')] [comment: Target file in Spring Boot app./]
package [packageRepositoryPathVar/].repository;

import org.springframework.data.jpa.repository.JpaRepository;
import [packageRepositoryPathVar/].domain.[entityClassNameVar/];

		[for (p: Property | aClass.getAllAttributes()) separator('\n')]
			[if p.isID = true]
public interface [entityClassNameVar/]Repository extends JpaRepository<[entityClassNameVar/], [p.type.name.toUpperFirst()/]> {
			[/if]
		[/for]
	
//Code between start and end will not be removed during generation.
//[protected ('for this repository')]
//[/protected]

}
	[/file]
[/if]

[/template]
