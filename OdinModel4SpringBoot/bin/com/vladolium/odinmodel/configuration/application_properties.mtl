[comment encoding = UTF-8 /]
[module application_properties('http://www.eclipse.org/uml2/5.0.0/UML')]

[comment: Defining name of the template./]
[template public application_properties(aClass : Class)]

[comment: Defining target file location in Spring Boot app./]
[file ('src/main/resources/application.properties', false, 'UTF-8')]

[comment: 
	- Defining that the code between protected will not be removed 
	in case of another code generation. 
	- We hide it behind the target file's comments to avoid errors.
	- We give it a unique name in the brackets./]
#[protected ('application.properties')]

[comment: 
	- The boilerplate code of the target file with OdinModel default values.
	- H2 database is the defaul database./]
#-- HINT: define server port
server.port=5000

#-- HINT: Log Level may be ERROR, WARN, INFO (for production), DEBUG, or TRACE
logging.level.org.springframework.web=DEBUG

#----------------------------------------

#--------- H2 embedded setup -----------

#-- HINT: enable h2 console with true; disable with false
spring.h2.console.enabled=true

#-- HINT: set console path
spring.h2.console.path=/h2

#-- HINT: set schema-name and local path for database file
#-- HINT: when using the URL jdbc:h2:file:./data/sample, the database is stored in the directory data (relative to the current working directory). The directory is created automatically if it does not yet exist.
#-- HINT: an example for using the fully qualified directory name (and for Windows, drive name) is jdbc:h2:file:c:/h2/schema-name
spring.datasource.url=jdbc:h2:file:./h2data/classicCars

#-- HINT: add username
spring.datasource.username=

#-- HINT: add password
spring.datasource.password=

#-- HINT: h2 driver
spring.datasource.driver-class-name=org.h2.Driver

#-- HINT: allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.H2Dialect

#----------------------------------------

#--------- MySQL embedded setup ---------

#-- HINT: set database path and schema name
#spring.datasource.url= jdbc:mysql://localhost:3306/schema-name?verifyServerCertificate=false&useSSL=true

#-- HINT: add username
#spring.datasource.username=

#-- HINT: add password
#spring.datasource.password=

#spring.datasource.driver-class-name=com.mysql.jdbc.Driver

#-- HINT: allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

#-----------------------------------------

#--------- JPA Hibernate setup ---------

#-- HINT: true or false
spring.jpa.show-sql = false

#-- HINT: Hibernate ddl auto (create, create-drop, update, none, validate)
spring.jpa.hibernate.ddl-auto = update

#----------------------------------------

#[/protected]

[/file]
[/template]


